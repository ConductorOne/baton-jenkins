name: ci
on: pull_request
jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run linters
        uses: golangci/golangci-lint-action@v5
        with:
          version: latest
          args: --timeout=3m
  go-test:
    strategy:
      matrix:
        go-version: [1.22.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: go tests
        run: go test -v -covermode=count -json ./... > test.json
      - name: annotate go tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: test.json

  test:
    runs-on: ubuntu-latest
    services:
      jenkins:
        # https://hub.docker.com/r/jenkins/jenkins
        image: jenkins/jenkins:latest
        env:
          # disable setup wizard + JCasC path
          JAVA_OPTS: -Djenkins.install.runSetupWizard=false -Dcasc.jenkins.config=/casc_configs
        ports:
          - 8080:8080
          - 50000:50000
      agent1:
        image: jenkins/jnlp-agent-jdk11

    env:
      BATON_JENKINS_USERNAME: ${{ secrets.BATON_JENKINS_USERNAME }}
      BATON_JENKINS_TOKEN: ${{ secrets.BATON_JENKINS_TOKEN }}
      BATON_JENKINS_BASEURL: http://localhost:8080
      BATON_LOG_LEVEL: debug
      CONNECTOR_GRANT: 'role:reviewer:reviewer:user:localuser'
      CONNECTOR_ENTITLEMENT: 'role:reviewer:reviewer'
      CONNECTOR_PRINCIPAL: 'localuser'
      CONNECTOR_PRINCIPAL_TYPE: 'user'
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build baton-jenkins
        run: go build ./cmd/baton-jenkins
      - name: Import jenkins backup
        run: |
          ls -la
          docker ps
          # docker exec jenkins/jenkins:latest ls -la
          # tar xvfz jenkins-backup.tar.gz $JENKINS_HOME
          # tar xvfz jenkins-credentials.tar.gz /var/jenkins_home/secrets/
      - name: Install baton
        run: ./scripts/get-baton.sh && mv baton /usr/local/bin
      # - name: Run baton-jenkins
        # run: ./baton-jenkins --log-level=debug --jenkins-username adminuser --jenkins-token ${{ env.BATON_JENKINS_TOKEN }}
      